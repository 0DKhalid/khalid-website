{"version":3,"file":"component---src-pages-courses-ytb-play-list-title-jsx-91cce62e6f0ed99d659a.js","mappings":"oLAK0D,IAAAA,EAAA,CAAAC,KAAA,UAAAC,OAAA,+HAAAC,EAAA,CAAAF,KAAA,SAAAC,OAAA,0IAkD1D,UA/Ce,SAAHE,GAAkB,IAAZC,EAAID,EAAJC,KACRC,GAAYC,EAAAA,EAAAA,KAAZD,QACFE,EAAgBH,EAAKI,OAAOC,SAASC,MACrCC,EAAgBN,EAAQ,eAGvBO,EAAkCL,EAAcM,MAAK,SAAAC,GAAS,OAAAA,EAAPC,QAAqBC,WAAWC,QAAQC,cAAeP,aAAa,EAAbA,EAAeO,WAAU,IAE7IC,QAAQC,IAAI,CAACR,gCAAAA,IACd,IAAMS,EAAaV,GAAiBC,EAAmCD,EAAgBJ,EAAc,GAAGQ,QAAQC,WAAWC,QAG3H,OACEK,EAAAA,EAAAA,IAACC,EAAAA,EAAmB,MAClBD,EAAAA,EAAAA,IAAA,WAAAE,IAAAzB,IACEuB,EAAAA,EAAAA,IAACG,EAAAA,GAAU,CAACJ,WAAYA,EAAYK,KAAMnB,KAC1Ce,EAAAA,EAAAA,IAAA,WAAAE,IAAAtB,IACEoB,EAAAA,EAAAA,IAACK,EAAAA,GAAW,CAACN,WAAYA,EAAYd,cAAeA,MAS9D,C","sources":["webpack://ktech-website/./src/pages/courses/{ytbPlayList.title}.jsx"],"sourcesContent":["import { graphql } from \"gatsby\";\r\nimport React from \"react\";\r\nimport { VideosList, VideoPlayer } from \"../../components\";\r\nimport tw from \"twin.macro\";\r\nimport { VideoPlayerProvider } from '../../context';\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\n\r\n\r\nconst Course = ({ data }) => {\r\n  const { getItem } = useLocalStorage()\r\n  const playlistItems = data.course.playlist.items;\r\n  const lastActiveVid = getItem('activeVidId')\r\n  // check if the vid id in local storage is in the current selected tutorial  if not just select first vid\r\n\r\n   const isLastActiveVidInSelectedCourse = playlistItems.find(({snippet}) => snippet.resourceId.videoId.toString() === lastActiveVid?.toString() )\r\n\r\n   console.log({isLastActiveVidInSelectedCourse})\r\n  const firstVidId = lastActiveVid && isLastActiveVidInSelectedCourse  ? lastActiveVid : playlistItems[0].snippet.resourceId.videoId\r\n\r\n\r\n  return (\r\n    <VideoPlayerProvider>\r\n      <section tw=\"py-10 text-gray flex \">\r\n        <VideosList firstVidId={firstVidId} list={playlistItems} />\r\n        <section tw='flex-col flex-auto mx-5  justify-center items-center overflow-hidden '>\r\n          <VideoPlayer firstVidId={firstVidId} playlistItems={playlistItems} />\r\n\r\n        </section>\r\n\r\n\r\n      </section>\r\n    </VideoPlayerProvider>\r\n  );\r\n  //  <pre>{JSON.stringify(data.course.playlist.items, null, 4)}</pre>;\r\n};\r\n\r\nexport const query = graphql`\r\n  query Course($id: String) {\r\n    course: ytbPlayList(id: { eq: $id }) {\r\n      playlist {\r\n        items {\r\n          snippet {\r\n            description\r\n            title\r\n            resourceId {\r\n              videoId\r\n              duration\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Course;\r\n"],"names":["_ref3","name","styles","_ref4","_ref","data","getItem","useLocalStorage","playlistItems","course","playlist","items","lastActiveVid","isLastActiveVidInSelectedCourse","find","_ref2","snippet","resourceId","videoId","toString","console","log","firstVidId","___EmotionJSX","VideoPlayerProvider","css","VideosList","list","VideoPlayer"],"sourceRoot":""}